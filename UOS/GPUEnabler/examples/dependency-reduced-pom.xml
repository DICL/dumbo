<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <parent>
    <artifactId>gpu-enabler-parent</artifactId>
    <groupId>com.ibm</groupId>
    <version>2.0.0</version>
  </parent>
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.ibm</groupId>
  <artifactId>gpu-enabler-examples_2.11</artifactId>
  <name>GPU Enabler Examples</name>
  <version>2.0.0</version>
  <inceptionYear>2016</inceptionYear>
  <build>
    <sourceDirectory>src/main/</sourceDirectory>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>net.alchim31.maven</groupId>
          <artifactId>scala-maven-plugin</artifactId>
          <version>3.2.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>2.0.2</version>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <executions>
          <execution>
            <phase>compile</phase>
            <goals>
              <goal>compile</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <source>1.7</source>
          <target>1.7</target>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>unpack-jcublas-natives</id>
            <phase>package</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <skip>${skip.jcuda.natives}</skip>
              <artifactItems>
                <artifactItem>
                  <groupId>jcuda</groupId>
                  <artifactId>jcublas-natives</artifactId>
                  <version>${jcuda.version}</version>
                  <classifier>${libJ.version}</classifier>
                  <type>jar</type>
                  <overWrite>true</overWrite>
                  <includes>**/*.so</includes>
                  <outputDirectory>${project.build.directory}</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-jcuda-natives</id>
            <phase>package</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <skip>${skip.jcuda.natives}</skip>
              <artifactItems>
                <artifactItem>
                  <groupId>jcuda</groupId>
                  <artifactId>jcuda-natives</artifactId>
                  <version>${jcuda.version}</version>
                  <classifier>${libJ.version}</classifier>
                  <type>jar</type>
                  <overWrite>true</overWrite>
                  <includes>**/*.so</includes>
                  <outputDirectory>${project.build.directory}</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-jcudnn-natives</id>
            <phase>package</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <skip>${skip.jcuda.natives}</skip>
              <artifactItems>
                <artifactItem>
                  <groupId>jcuda</groupId>
                  <artifactId>jcudnn-natives</artifactId>
                  <version>${jcuda.version}</version>
                  <classifier>${libJ.version}</classifier>
                  <type>jar</type>
                  <overWrite>true</overWrite>
                  <includes>**/*.so</includes>
                  <outputDirectory>${project.build.directory}</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-jcufft-natives</id>
            <phase>package</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <skip>${skip.jcuda.natives}</skip>
              <artifactItems>
                <artifactItem>
                  <groupId>jcuda</groupId>
                  <artifactId>jcufft-natives</artifactId>
                  <version>${jcuda.version}</version>
                  <classifier>${libJ.version}</classifier>
                  <type>jar</type>
                  <overWrite>true</overWrite>
                  <includes>**/*.so</includes>
                  <outputDirectory>${project.build.directory}</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-jcurand-natives</id>
            <phase>package</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <skip>${skip.jcuda.natives}</skip>
              <artifactItems>
                <artifactItem>
                  <groupId>jcuda</groupId>
                  <artifactId>jcurand-natives</artifactId>
                  <version>${jcuda.version}</version>
                  <classifier>${libJ.version}</classifier>
                  <type>jar</type>
                  <overWrite>true</overWrite>
                  <includes>**/*.so</includes>
                  <outputDirectory>${project.build.directory}</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-jcusolver-natives</id>
            <phase>package</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <skip>${skip.jcuda.natives}</skip>
              <artifactItems>
                <artifactItem>
                  <groupId>jcuda</groupId>
                  <artifactId>jcusolver-natives</artifactId>
                  <version>${jcuda.version}</version>
                  <classifier>${libJ.version}</classifier>
                  <type>jar</type>
                  <overWrite>true</overWrite>
                  <includes>**/*.so</includes>
                  <outputDirectory>${project.build.directory}</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-jcusparse-natives</id>
            <phase>package</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <skip>${skip.jcuda.natives}</skip>
              <artifactItems>
                <artifactItem>
                  <groupId>jcuda</groupId>
                  <artifactId>jcusparse-natives</artifactId>
                  <version>${jcuda.version}</version>
                  <classifier>${libJ.version}</classifier>
                  <type>jar</type>
                  <overWrite>true</overWrite>
                  <includes>**/*.so</includes>
                  <outputDirectory>${project.build.directory}</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-jnvgraph-natives</id>
            <phase>package</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <skip>${skip.jcuda.natives}</skip>
              <artifactItems>
                <artifactItem>
                  <groupId>jcuda</groupId>
                  <artifactId>jnvgraph-natives</artifactId>
                  <version>${jcuda.version}</version>
                  <classifier>${libJ.version}</classifier>
                  <type>jar</type>
                  <overWrite>true</overWrite>
                  <includes>**/*.so</includes>
                  <outputDirectory>${project.build.directory}</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-shade-plugin</artifactId>
        <version>3.0.0</version>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <shadedArtifactAttached>false</shadedArtifactAttached>
          <artifactSet>
            <includes>
              <include>com.ibm:gpu-enabler_2.11</include>
            </includes>
          </artifactSet>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.scala-tools</groupId>
        <artifactId>maven-scala-plugin</artifactId>
        <version>2.15.2</version>
        <executions>
          <execution>
            <goals>
              <goal>compile</goal>
            </goals>
            <configuration>
              <excludes>
                <exclude>${exclude.files}</exclude>
              </excludes>
            </configuration>
          </execution>
        </executions>
        <configuration>
          <scalaVersion>${scala.version}</scalaVersion>
        </configuration>
      </plugin>
      <plugin>
        <groupId>net.alchim31.maven</groupId>
        <artifactId>scala-maven-plugin</artifactId>
        <version>3.2.2</version>
        <executions>
          <execution>
            <id>eclipse-add-source</id>
            <goals>
              <goal>add-source</goal>
            </goals>
          </execution>
          <execution>
            <id>scala-compile-first</id>
            <phase>process-resources</phase>
            <goals>
              <goal>compile</goal>
            </goals>
            <configuration>
              <skip>${skip.jcuda.natives}</skip>
              <excludes>
                <exclude>${exclude.files}</exclude>
              </excludes>
            </configuration>
          </execution>
          <execution>
            <id>scala-test-compile-first</id>
            <phase>process-test-resources</phase>
            <goals>
              <goal>testCompile</goal>
            </goals>
          </execution>
          <execution>
            <id>attach-scaladocs</id>
            <phase>verify</phase>
            <goals>
              <goal>doc-jar</goal>
            </goals>
            <configuration>
              <skip>${skip.jcuda.natives}</skip>
              <excludes>
                <exclude>${exclude.files}</exclude>
              </excludes>
            </configuration>
          </execution>
        </executions>
        <configuration>
          <scalaVersion>${scala.version}</scalaVersion>
          <recompileMode>incremental</recompileMode>
          <useZincServer>true</useZincServer>
          <args>
            <arg>-unchecked</arg>
            <arg>-deprecation</arg>
            <arg>-feature</arg>
          </args>
          <jvmArgs>
            <jvmArg>-Xms${HeapSize}</jvmArg>
            <jvmArg>-Xmx${MaxHeapSize}</jvmArg>
            <jvmArg>-XX:PermSize=${PermGen}</jvmArg>
            <jvmArg>-XX:MaxPermSize=${MaxPermGen}</jvmArg>
            <jvmArg>-XX:ReservedCodeCacheSize=${CodeCacheSize}</jvmArg>
          </jvmArgs>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-eclipse-plugin</artifactId>
        <version>2.10</version>
        <configuration>
          <downloadSources>true</downloadSources>
          <buildcommands>
            <buildcommand>ch.epfl.lamp.sdt.core.scalabuilder</buildcommand>
          </buildcommands>
          <additionalProjectnatures>
            <projectnature>ch.epfl.lamp.sdt.core.scalanature</projectnature>
          </additionalProjectnatures>
          <classpathContainers>
            <classpathContainer>org.eclipse.jdt.launching.JRE_CONTAINER</classpathContainer>
            <classpathContainer>ch.epfl.lamp.sdt.launching.SCALA_CONTAINER</classpathContainer>
          </classpathContainers>
        </configuration>
      </plugin>
    </plugins>
  </build>
  <repositories>
    <repository>
      <id>scala-tools.org</id>
      <name>Scala-Tools Maven2 Repository</name>
      <url>http://scala-tools.org/repo-releases</url>
    </repository>
    <repository>
      <id>jcuda.local</id>
      <name>JCuda</name>
      <url>file:${project.basedir}/../${mavenized.jcuda}/repo</url>
    </repository>
  </repositories>
  <pluginRepositories>
    <pluginRepository>
      <id>scala-tools.org</id>
      <name>Scala-Tools Maven2 Repository</name>
      <url>http://scala-tools.org/repo-releases</url>
    </pluginRepository>
  </pluginRepositories>
  <dependencies>
    <dependency>
      <groupId>org.apache.spark</groupId>
      <artifactId>spark-mllib_2.11</artifactId>
      <version>2.1.0</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.scala-lang</groupId>
      <artifactId>scala-library</artifactId>
      <version>2.11.8</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.specs</groupId>
      <artifactId>specs</artifactId>
      <version>1.2.5</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <artifactId>junit</artifactId>
          <groupId>junit</groupId>
        </exclusion>
        <exclusion>
          <artifactId>scalatest</artifactId>
          <groupId>org.scalatest</groupId>
        </exclusion>
        <exclusion>
          <artifactId>scalacheck</artifactId>
          <groupId>org.scalacheck</groupId>
        </exclusion>
        <exclusion>
          <artifactId>jmock</artifactId>
          <groupId>org.jmock</groupId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.apache.spark</groupId>
      <artifactId>spark-core_2.11</artifactId>
      <version>2.1.0</version>
      <scope>compile</scope>
      <exclusions>
        <exclusion>
          <artifactId>scala-library</artifactId>
          <groupId>org.scala-lang</groupId>
        </exclusion>
        <exclusion>
          <artifactId>scala-compiler</artifactId>
          <groupId>org.scala-lang</groupId>
        </exclusion>
        <exclusion>
          <artifactId>scalap</artifactId>
          <groupId>org.scala-lang</groupId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.apache.spark</groupId>
      <artifactId>spark-sql_2.11</artifactId>
      <version>2.1.0</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.spark</groupId>
      <artifactId>spark-catalyst_2.11</artifactId>
      <version>2.1.0</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.scala-tools.testing</groupId>
      <artifactId>specs</artifactId>
      <version>1.6.2.2_1.5.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.scala-lang</groupId>
      <artifactId>scala-xml</artifactId>
      <version>2.11.0-M4</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.scalatest</groupId>
      <artifactId>scalatest_2.11</artifactId>
      <version>2.2.6</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <artifactId>scala-xml_2.11</artifactId>
          <groupId>org.scala-lang.modules</groupId>
        </exclusion>
      </exclusions>
    </dependency>
  </dependencies>
  <reporting>
    <plugins>
      <plugin>
        <groupId>org.scala-tools</groupId>
        <artifactId>maven-scala-plugin</artifactId>
        <version>2.15.2</version>
        <configuration>
          <scalaVersion>${scala.version}</scalaVersion>
        </configuration>
      </plugin>
    </plugins>
  </reporting>
  <properties>
    <libJ.version>linux-ppc_64</libJ.version>
    <sbt.project.name>examples</sbt.project.name>
  </properties>
</project>

