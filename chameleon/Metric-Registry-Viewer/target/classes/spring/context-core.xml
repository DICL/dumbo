<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx.xsd
		">

	
	<!-- Root Context: defines shared resources visible to all other web components -->

	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.xiilab" />
    </bean>
    
    <tx:annotation-driven />

	<!-- properties -->

    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations" value="classpath:/mybatis/jdbc.properties" />
        <property name="fileEncoding" value="UTF-8" />
    </bean>

    

    <!-- JDBC-PostgreSQL (AMBARI) -->
    <bean id="ambari-dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="${jdbc.driverClassName}" />
        <property name="url" value="${jdbc.ambari.url}" />
        <property name="username" value="${jdbc.ambari.username}" />
        <property name="password" value="${jdbc.ambari.password}" />
    </bean>

    
    <bean id="ambari-sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean"> 
    	<property name="configLocation" value="classpath:mybatis/mybatis-config.xml" />      
    	<property name="mapperLocations" value="classpath:mybatis/mapper/ambari/*.xml"/>  
    	<property name="dataSource" ref="ambari-dataSource" /> 
    </bean>
    
    
	<bean id="ambari-sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
      <constructor-arg ref="ambari-sqlSessionFactory" /> 
    </bean>

    
     <bean id="ambari-transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
    	<property name="dataSource" ref="ambari-dataSource"></property>
    </bean>
    
         
	<tx:advice id="ambari-txAdvice" transaction-manager="ambari-transactionManager">
	    <tx:attributes>
	    	<tx:method name="insert*" rollback-for="Exception"/>
	        <tx:method name="save*" rollback-for="Exception"/>
	        <tx:method name="update*" rollback-for="Exception"/>
	        <tx:method name="delete*" rollback-for="Exception"/>
	    </tx:attributes>
	</tx:advice>
	
	
	
	<!-- timescaleDB Configs -->
	<!-- JDBC-PostgreSQL (timescaleDB) -->
	<!-- <bean id="timescale-dataSourceSpied" class="org.springframework.jdbc.datasource.DriverManagerDataSource"> -->
<!-- 	<bean id="timescale-dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="${jdbc.driverClassName}" />
        <property name="url" value="${jdbc.timescale.url}" />
        <property name="username" value="${jdbc.timescale.username}" />
        <property name="password" value="${jdbc.timescale.password}" />
    </bean> -->
    
    <!-- <bean id="timescale-dataSource" class="net.sf.log4jdbc.Log4jdbcProxyDataSource">
        <constructor-arg ref="timescale-dataSourceSpied" />
        <property name="logFormatter">
            <bean class="net.sf.log4jdbc.tools.Log4JdbcCustomFormatter">
                <property name="loggingType" value="MULTI_LINE" />
                <property name="sqlPrefix" value="SQL         :  "/>
            </bean>
        </property>
    </bean> -->
	
<!-- 	<bean id="timescale-sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean"> 
    	<property name="configLocation" value="classpath:mybatis/mybatis-config.xml" />      
    	<property name="mapperLocations" value="classpath:mybatis/mapper/timescale/*.xml"/>  
    	<property name="dataSource" ref="timescale-dataSource" /> 
    </bean>
    
    <bean id="timescale-sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
      <constructor-arg index="0" ref="timescale-sqlSessionFactory" /> 
    </bean>
	
	<bean id="timescale-transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
    	<property name="dataSource" ref="timescale-dataSource"></property>
    </bean>
    
         
	<tx:advice id="timescale-txAdvice" transaction-manager="ambari-transactionManager">
	    <tx:attributes>
	    	<tx:method name="insert*" rollback-for="Exception"/>
	        <tx:method name="save*" rollback-for="Exception"/>
	        <tx:method name="update*" rollback-for="Exception"/>
	        <tx:method name="delete*" rollback-for="Exception"/>
	    </tx:attributes>
	</tx:advice> -->
	
   

</beans>