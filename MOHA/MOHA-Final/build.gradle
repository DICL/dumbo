//project.ext.archiveName = 'MOHA_status.jar'
project.ext.archiveName = 'MOHA.jar'

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'eclipse'

group = 'org.kisti.moha'
version = 'Rev1'

description = """MOHA Application"""

sourceCompatibility = 1.7
targetCompatibility = 1.7

repositories {
  mavenCentral()
  jcenter{ url "http://jcenter.bintray.com/" }
   //jcenter() 
  //maven { url "https://maven.google.com/"}
}

dependencies {
	
	
    compile group: 'org.apache.hadoop', name: 'hadoop-client', version:'2.7.1'   
	compile group: 'org.apache.kafka', name: 'kafka_2.11', version: '0.10.1.0'    
	compile group: 'org.apache.activemq', name: 'activemq-all', version: '5.11.0'
	compile group: 'mysql', name: 'mysql-connector-java', version: '5.1.26'	
	compile group: 'nz.ac.waikato.cms.weka', name: 'weka-stable', version: '3.8.0'
	compile group: 'org.pentaho.pentaho-commons', name: 'pentaho-package-manager', version: '1.0.11'	
	
	//compile group: 'org.deeplearning4j', name: 'deeplearning4j-core', version: '0.9.1'		
	
	//compile files('D:/eclipse/workspace/MOHA-Final/libs/weka-stable-3.7.13.jar')        
    //testCompile group: 'junit', name: 'junit', version:'4.11'
    //testCompile group: 'org.hamcrest', name: 'hamcrest-all', version:'1.3'
    //testCompile group: 'org.apache.mrunit', name: 'mrunit', version:'1.0.0', classifier:'hadoop2'
}

configurations {
    mysql
    kafka
    activemq
    weka
    deeplearning4j
    packagemanager
}

dependencies {	
	
    mysql group: 'mysql', name: 'mysql-connector-java', version: '5.1.26'
    kafka group: 'org.apache.kafka', name: 'kafka_2.11', version: '0.10.1.0'
    activemq group: 'org.apache.activemq', name: 'activemq-all', version: '5.11.0'
    weka group: 'nz.ac.waikato.cms.weka', name: 'weka-stable', version: '3.8.0'  
    packagemanager group: 'org.pentaho.pentaho-commons', name: 'pentaho-package-manager', version: '1.0.11'
    
    //deeplearning4j group: 'org.deeplearning4j', name: 'deeplearning4j-core', version: '0.9.1'    
    
}
 
if (project.ext.properties.containsKey("archiveName")) {
  jar {
    if (project.ext.properties.containsKey("mainclass")) {
      manifest { attributes 'Main-Class': "${project.ext.mainclass}" }
    }
   
    //from configurations.compile.collect { zipTree it}
    //from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    //from { configurations.compile.mysql { it.isDirectory() ? it : zipTree(it) } }
    
	 from configurations.mysql.collect { zipTree it }
	 from configurations.kafka.collect { zipTree it }
	 from configurations.activemq.collect { zipTree it }
	 
	 from configurations.weka.findAll{it.name.endsWith('3.8.0.jar')}.collect {println it
	 																	it.isDirectory() ? it : zipTree(it) }
	 
	 from configurations.packagemanager.findAll{it.name.endsWith('jar')}.collect {println it
	 																	it.isDirectory() ? it : zipTree(it) }
	 
	 //from configurations.weka.findAll{!it.name.endsWith('pom')}.collect { println it
	 //									it.isDirectory() ? it : zipTree(it) }	
	 //from configurations.deeplearning4j.collect {
	 //											println it 
	 //											zipTree it } 
	   
    
    archiveName = "${project.ext.archiveName}"
    destinationDir = new File("${project.projectDir}")
  }
}

task deleteJar(type: Delete) {
  if (project.ext.properties.containsKey("archiveName")) {
    delete "${project.ext.archiveName}"
  }
}

clean.dependsOn(deleteJar)
println name
println project.name
println path
println description
println buildDir
println version
